// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.3 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/google/uuid"
)

// Error defines model for Error.
type Error struct {
	CorrelationId uuid.UUID `json:"correlation_id"`
	Message       string    `json:"message"`
	Status        int       `json:"status"`
	Time          time.Time `json:"time"`
}

// UpdateUserWithPassword defines model for UpdateUserWithPassword.
type UpdateUserWithPassword struct {
	Country   *string              `json:"country,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"first_name,omitempty"`
	LastName  *string              `json:"last_name,omitempty"`
	Nickname  *string              `json:"nickname,omitempty"`
	Password  *string              `json:"password,omitempty"`
}

// User defines model for User.
type User struct {
	Country   *string              `json:"country,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"first_name,omitempty"`
	LastName  *string              `json:"last_name,omitempty"`
	Nickname  *string              `json:"nickname,omitempty"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	Country   string              `json:"country"`
	CreatedAt *time.Time          `json:"created_at,omitempty"`
	Email     openapi_types.Email `json:"email"`
	FirstName string              `json:"first_name"`
	Id        uuid.UUID           `json:"id"`
	LastName  string              `json:"last_name"`
	Nickname  string              `json:"nickname"`
	UpdatedAt *time.Time          `json:"updated_at,omitempty"`
}

// UserWithPassword defines model for UserWithPassword.
type UserWithPassword struct {
	Country   string              `json:"country"`
	Email     openapi_types.Email `json:"email"`
	FirstName string              `json:"first_name"`
	LastName  string              `json:"last_name"`
	Nickname  string              `json:"nickname"`
	Password  *string             `json:"password,omitempty"`
}

// ListParams defines parameters for List.
type ListParams struct {
	// Page page number
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// Pagesize number of listed items
	Pagesize *int `form:"pagesize,omitempty" json:"pagesize,omitempty"`

	// FirstName filter results by first name starting with
	FirstName *string `form:"first_name,omitempty" json:"first_name,omitempty"`

	// LastName filter results by last name starting with
	LastName *string `form:"last_name,omitempty" json:"last_name,omitempty"`

	// Nickname filter results by nickname starting with
	Nickname *string `form:"nickname,omitempty" json:"nickname,omitempty"`

	// Email filter results by email starting with
	Email *string `form:"email,omitempty" json:"email,omitempty"`

	// Country filter results by country code
	Country *string `form:"country,omitempty" json:"country,omitempty"`
}

// CreateJSONRequestBody defines body for Create for application/json ContentType.
type CreateJSONRequestBody = UserWithPassword

// UpdateByIDJSONRequestBody defines body for UpdateByID for application/json ContentType.
type UpdateByIDJSONRequestBody = UpdateUserWithPassword
